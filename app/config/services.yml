# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:

    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $projectDir: '%kernel.project_dir%'

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    Http\Message\ResponseFactory: '@Http\Message\MessageFactory\DiactorosMessageFactory'
    Http\Message\MessageFactory\DiactorosMessageFactory: ~

    Outstack\Components\ApiProvider\ApiProblemDetails\ApiProblemFactory: ~

    Outstack\Enveloper\Resolution\TemplateLanguage: '@Outstack\Enveloper\Resolution\Twig\TwigTemplateLanguage'
    Outstack\Enveloper\Resolution\Twig\TwigTemplateLanguage:
        arguments:
            - '@twig'
    Outstack\Enveloper\Templates\TemplatePipeline:
        factory: 'Outstack\Enveloper\PipeprintBridge\TemplatePipelineFactory:create'
        class: Outstack\Enveloper\Templates\TemplatePipeline
        arguments:
            - '%pipeprint_url%'

    Outstack\Enveloper\PipeprintBridge\TemplatePipelineFactory:
        arguments:
            - '@enveloper.templates.template_loader.filesystem.flysystem'
            - '@twig'

    Outstack\Enveloper\Resolution\ParticipantResolver:
        public: false
        autowire: true

    Outstack\Enveloper\Resolution\ParticipantListResolver:
        public: false
        autowire: true

    Outstack\Enveloper\Resolution\MessageResolver:
        autowire: true
        arguments:
            $defaultSenderEmail: '%default_sender_email%'
            $defaultSenderName: '%default_sender_name%'

    Outstack\Enveloper\Resolution\AttachmentListResolver: ~
    Outstack\Enveloper\Resolution\AttachmentResolver: ~


    enveloper.templates.template_loader:
        alias: enveloper.templates.template_loader.filesystem

    Outstack\Enveloper\Templates\Loader\TemplateLoader: '@Outstack\Enveloper\Templates\Loader\FilesystemLoader'

    Outstack\Enveloper\Templates\Loader\FilesystemLoader:
        arguments:
            - '@enveloper.templates.template_loader.filesystem.flysystem'

    enveloper.templates.template_loader.filesystem.flysystem:
        public: false
        class: League\Flysystem\Filesystem
        arguments:
            - '@enveloper.templates.template_loader.filesystem.flysystem.adapter'

    enveloper.templates.template_loader.filesystem.flysystem.adapter:
        public: false
        class: League\Flysystem\Adapter\Local
        arguments:
            - '%template_directory%'

    Outstack\Enveloper\SwiftMailerBridge\SwiftMailerFactory:
        arguments:
            - transport:  'smtp'
              record:     '%mailer_record_messages%'
              host:       '%mailer_host%'
              username:   '%mailer_username%'
              port:       '%mailer_port%'
              password:   '%mailer_password%'
              encryption: '%mailer_encryption%'
              deliver_messages: '%mailer_deliver_messages%'

    Outstack\Enveloper\SwiftMailerBridge\SwiftMailerInterface:
        public: true
        factory: 'Outstack\Enveloper\SwiftMailerBridge\SwiftMailerFactory:create'

    Outstack\Enveloper\Outbox: ~

    Outstack\Enveloper\Folders\SentMessagesFolder: '@Outstack\Enveloper\Folders\DoctrineOrmSentMessagesFolder'
    Outstack\Enveloper\Folders\DoctrineOrmSentMessagesFolder: ~

    AppBundle\Messenger\SpoolTransportEventSubscriber:
        autowire: true
        arguments:
            $receiverLocator: '@messenger.receiver_locator'
            $enveloperQueueDsn: '%env(ENVELOPER_QUEUE_DSN)%'